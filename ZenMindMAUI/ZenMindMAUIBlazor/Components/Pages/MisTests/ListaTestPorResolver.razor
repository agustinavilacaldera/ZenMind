@inject Controllers.ModelController model

<Scheduler>
  <Appointments>
    @foreach (TestAssignments testAssignments in listaTestAssignment)
    {
      @if (testAssignments.Date == DateTime.Today)
      {
        <Appointment Start="testAssignments.Date" End="testAssignments.Date" Color="green">
          <button class="boton color-r5" @onclick="()=>selectTestAssignment(testAssignments.Id)">Go</button>
        </Appointment>
      }
      else
      {
        <Appointment Start="testAssignments.Date" End="testAssignments.Date" Color="red">
          <button class="boton color-r1">Wait</button>
        </Appointment>
      }
      
    }
  </Appointments>
</Scheduler>
@*
@if (listaTestAssignment != null)
{
  <div class="list-group">
    <div class="list-group-item">
      <div class="row">
        <div class="col-2">Id</div>
        <div class="col-2">Fecha</div>
        <div class="col-8">Título</div>
      </div>
    </div>
  </div>
  @foreach (TestAssignments testAssignments in listaTestAssignment)
  {
    <ItemMisTestAssignment TestAssignmentId="testAssignments.Id" SelectedTestAssignment="selectTestAssignment" />
  }

*@

@code {
  [Parameter]
  public int PacienteId { get; set; }
  [Parameter]
  public EventCallback<int> SelectedItem { get; set; }
  private List<TestAssignments> listaTestAssignment;

  protected override void OnInitialized()
  {
    listaTestAssignment = model.ListarTestAssignmentNoResueltosPorPaciente(PacienteId);
  }
  private void selectTestAssignment(int taId)
  {
    SelectedItem.InvokeAsync(taId);
  }
}